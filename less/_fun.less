//背景部分
@charset "UTF-8";
.bg(...){
	background: @arguments;
}
.bg-c(@color){
	background-color: @color;
}
.bg-c(@color, @alpha){
	.parseRGB(@color);
	background-color: @rgbacolor;
}
.bg-c(@rchannel,@gchannel,@bchannel,@alpha : 1){
	background-color: rgb(@rchannel, @gchannel, @bchannel, @alpha);
}
.parseRGB(@color){
	@rchannel : red(@color);
	@gchannel : green(@color);
	@bchannel : blue(@color);
	@rgbacolor : rgba(@rchannel, @gchannel, @bchannel, @alpha);
}
.bg-c-ie(@color, @alpha){
	.parseRGB(@color);
	@argbcolor : argb(@rgbacolor);
	background-color: transparent\9;
	filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{argbcolor},endColorstr=@{argbcolor})\9";
}

.bg-i(false){
	background-image: none;
}
.bg-i(@url) when (default()){
	background-image: url(@url);
}
.bg-p(...){
	background-position: @arguments;
}
.bg-r(x){
	background-repeat: repeat-x;
}
.bg-r(y){
	background-repeat: repeat-y;
}
.bg-r(no){
	background-repeat: no-repeat;
}
.bg-r(true){
	background-repeat: repeat;
}

//背景静止
.bg-a(fixed){
	background-attachment: fixed;
}
.bg-a(scroll){
	background-attachment: scroll;
}
//背景尺寸
.bg-s(@k){
	background-size: @k;
}
.bg-s(@h, @v){
	background-size: @h @v;
}
//背景线性过渡色
.bg-lg(@color1, @color2){
	background: -webkit-linear-gradient(@color1, @color2); /* Safari 5.1 - 6.0 */
	background: -moz-linear-gradient(@color1, @color2); /* Firefox 3.6 - 15 */
	background: -o-linear-gradient(@color1, @color2); /* Opera 11.1 - 12.0 */
	background: linear-gradient(@color1, @color2); /* 标准的语法 */
}
.bg-lg-ie(@color1, @color2){
	.parseRGB(@color1);
	@argbcolor1 : argb(@rgbacolor);
	.parseRGB(@color2);
	@argbcolor2 : argb(@rgbacolor);
	background-color: transparent\9;
	filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{argbcolor1},endColorstr=@{argbcolor2})\9";
}
// 背景源头
.bg-o(pbox){
    background-origin: padding-box;
}
.bg-o(cbox){
    background-origin: content-box;
}
.bg-o(bbox){
    background-origin: border-box;
}
// 背景切割
.bg-cl(pbox){
    background-clip: padding-box;
}
.bg-cl(cbox){
    background-clip: content-box;
}
.bg-cl(bbox){
    background-clip: border-box;
}

//边框部分
.bd(...){
	border: @arguments;
}
.bd-c(...){
	border-color: @arguments;
}
.bd-w(...){
	border-width: @arguments;
}
.bd-s(...){
	border-style: @arguments;
}
.bd-l(...){
	border-left: @arguments;
}
.bd-l-c(@color){
	border-left-color: @color;
}
.bd-l-w(@width){
	border-left-width: @width;
}
.bd-l-s(@style){
	border-left-style: @style;
}
.bd-r(...){
	border-right: @arguments;
}
.bd-r-c(@color){
	border-right-color: @color;
}
.bd-r-w(@width){
	border-right-width: @width;
}
.bd-r-s(@style){
	border-right-style: @style;
}
.bd-b(...){
	border-bottom: @arguments;
}
.bd-b-c(@color){
	border-bottom-color: @color;
}
.bd-b-w(@width){
	border-bottom-width: @width;
}
.bd-b-s(@style){
	border-bottom-style: @style;
}
.bd-t(...){
	border-top: @arguments;
}
.bd-t-c(@color){
	border-top-color: @color;
}
.bd-t-w(@width){
	border-top-width: @width;
}
.bd-t-s(@style){
	border-top-style: @style;
}
.out(...){
	outline: @arguments;
}
.radius(...){
	-webkit-border-radius: @arguments;
	-moz-border-radius: @arguments;
	border-radius: @arguments;
}
.round(){
	border-radius: 50%;
}
//效果，一些杂七杂八的效果
//低端IE8-用的透明
.alpha(@num){
	@n : @num * 100;
	filter: ~"alpha(opacity=@{n})";
}
//IE9+及四大浏览器的透明
.opacity(@float){
	opacity : @float;
}
//盒阴影
.box-shd(...){
	box-shadow: @arguments;
}
//文本阴影
.text-shd(...){
	text-shadow: @arguments;
}
//鼠标
.cur(@shape){
	cursor: @shape;
}
.pointer(){
	cursor: pointer;
}

//盒模型，尺寸/边距/填充
//尺寸
.h(@height : auto){
	height: @height;
}
.line(@n : 120%){
	line-height: @n;
}
.hline(@h){
	height: @h;
	line-height: @h;
}
.w(@width : auto){
	width: @width;
}
.wh(@size){
	width: @size;
	height: @size;
}
.wh(@w, @h){
	width: @w;
	height: @h;
}
.whline(@size){
	width: @size;
	height: @size;
	line-height: @size;
}
.maxh(@height : none){
	max-height: @height;
}
.maxw(@width : none){
	max-width: @width;
}
.minh(@height : 0){
	min-height: @height;
}
.minw(@width : 0){
	min-width: @width;
}
//边距
.m(...){
	margin: @arguments;
}
.ml(@m : auto){
	margin-left: @m;
}
.mr(@m : auto){
	margin-right: @m;
}
.mt(@m : auto){
	margin-top: @m;
}
.mb(@m : auto){
	margin-bottom: @m;
}
.ma(){
	margin-left: auto;
	margin-right: auto;
}
.ma(@mv){
	.ma();
	margin-top: @mv;
	margin-bottom: @mv;
}
.ma(@top, @bottom){
	.ma();
	margin-top: @top;
	margin-bottom: @bottom;
}
//填充
.p(...){
	padding: @arguments;
}
.pl(@p){
	padding-left: @p;
}
.pr(@p){
	padding-right: @p;
}
.pt(@p){
	padding-top: @p;
}
.pb(@p){
	padding-bottom: @p;
}
//溢出
.o(@way : hidden){
	overflow: @way;
}
.o(@xway,@yway){
	overflow-x:@xway;
	overflow-y:@yway;
}
.o-s(){
	overflow: scroll;
}
.o-a(){
	overflow: auto;
}
.o-a-h(){
	overflow-x: auto;
	overflow-y: hidden;
}
.o-h-a(){
	overflow-x: hidden;
	overflow-y: auto;
}
//盒模式
.block(){
	display: block;
}
.inline(){
	display: inline;
}
.inblock(){
	display: inline-block;
}
.none(){
	display: none;
}
.dis(@w : default){
	display: @w;
}
//可见
.vis(true){
	visibility: visible;
}
.vis(false){
	visibility: hidden;
}
//盒式
.bbox(){
	box-sizing: border-box;
}
.cbox(){
	box-sizing: content-box;
}
//定位，浮动，z轴
.absolute(){
	position: absolute;
}
.relative(){
	position: relative;
}
.fixed(){
	position: fixed;
}
.clear(){
	clear: both;
}
.l(@p : 0){
	left: @p;
}
.r(@p : 0){
	right: @p;
}
.t(@p : 0){
	top: @p;
}
.b(@p : 0){
	bottom: @p;
}
.lt(@l : 0, @t : 0){
	left: @l;
	top: @t;
}
.lb(@l : 0, @b : 0){
	left: @l;
	bottom: @b;
}
.rt(@r : 0, @t : 0){
	right: @r;
	top: @t;
}
.rb(@r : 0, @b : 0){
	right: @r;
	bottom: @b;
}
.center1{
	left:0;
	top:0;
	bottom:0;
	right:0;
	margin:auto;
}
.center2{
	position:absolute;
	left:50%;
	top:50%;
	transform:translate(-50%,-50%);
}
.z(@z){
	z-index: @z;
}
.fl(){
	float: left;
}
.fr(){
	float: right;
}
.fn(){
	float: none;
}
//文本效果，基本的对文字的操作
.c(@c){
	color: @c;
}
.family(@n){
	font-family: @n;
}
.yahei(){
	font-family: Microsoft Yahei;
}
.symsun(){
	font-family: symsun;
}
.size(@s : 12px){
	font-size: @s;
}
.bold(true){
	font-weight: bold;
}
.bold(false){
	font-weight: normal;
}
.italic(true){
	font-style: oblique;
	font-style: italic;
}
.italic(false){
	font-style: normal;
}
.txt(left){
	text-align: left;
}
.txt(center){
	text-align: center;
}
.txt(right){
	text-align: right;
}
.nowrap(){
	white-space: nowrap;
}
.wrap(){
	white-space: normal;
}
.valign(@d : middle){
	vertical-align: @d;
}
.cnt(@s : ''){
	content: @s;
}
.indent(@n : 2em){
	text-indent: @n;
}
.noline(){
	text-decoration: none;
}
.decorate(@w : none){
	text-decoration: @w;
}
.ellipsis{
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.break(){
	word-break: break-all;
	word-wrap: break-word;
}
//CSS转换/过渡
.tst(...){
	-webkit-transition: @arguments;
	-moz-transition: @arguments;
	-ms-transition: @arguments;
	-o-transition: @arguments;
	transition: @arguments;
}
// .trans(@speed : normal) when (@speed = normal){
// 	.transition(all linear .2s);
// }
// .trans(@speed : normal) when (@speed = no){
// 	.transition(none);
// }

//满尺寸，通常用于图片
.full(){
	width: 100%;
	height: 100%;
}
//可调整大小
//关键字：none, horizontal, vertical, both
.resize(@a : none){
	resize: @a !important;
}

.FILTER(){
	//灰度效果，0为无效果
	.grayscale(@float: 1){
		@per: percentage(@float);
		-webkit-filter: grayscale(@per);
		-moz-filter: grayscale(@per);
		-ms-filter: grayscale(@per);
		-o-filter: grayscale(@per);
		filter: grayscale(@per);
		filter: Gray\9;
	}
	//图片古典化效果，0为无效果
	.sepia(@float: 1){
		@per: percentage(@float);
	    -webkit-filter: sepia(@per);
	    -moz-filter: sepia(@per);
	    -ms-filter: sepia(@per);
		-o-filter: sepia(@per);
	    filter: sepia(@per);
	}
	//高斯模糊，参数整数，0为无效果
	.blur(@px: 1px){
	    -webkit-filter: blur(@px);
	    -moz-filter: blur(@px);
	    -ms-filter: blur(@px);
		-o-filter: blur(@px);
	    filter: blur(@px);
	    filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius=@px, MakeShadow=false)~"\9";
	}
	//反色，0为无效果
	.invert(@float : 1){
		-webkit-filter: invert(@float);
		-moz-filter: invert(@float);
		-ms-filter: invert(@float);
		-o-filter: invert(@float);
		filter: invert(@float);
	}
	//饱和度，1为无效果
	.saturate(@int : 1){
	    -webkit-filter: saturate(@int);
	    -moz-filter: saturate(@int);
	    -ms-filter: saturate(@int);
		-o-filter: saturate(@int);
	    filter: saturate(@int);
	}
	//对比度，1为无效果
    .contrast(@int : 1){
	    -webkit-filter: contrast(@int);
	    -moz-filter: contrast(@int);
	    -ms-filter: contrast(@int);
		-o-filter: contrast(@int);
	    filter: contrast(@int);
    }
    //亮度，1为无效果
   .brightness(@int : 1){
	    -webkit-filter: brightness(@int);
	    -moz-filter: brightness(@int);
	    -ms-filter: brightness(@int);
		-o-filter: brightness(@int);
	    filter: brightness(@int);
    }
    //色调旋转，0-359deg
    .hue-rotate(@deg: 0deg){
	    -webkit-filter: hue-rotate(@deg);
	    -moz-filter: hue-rotate(@deg);
	    -ms-filter: hue-rotate(@deg);
		-o-filter: hue-rotate(@deg);
	    filter: hue-rotate(@deg);
    }
    /**  格式，filter: drop-shadow(x-offset y-offset 阴影模糊半径 阴影颜色)
     *  x-offset和y-offset为阴影的相对于元素左上角的位移距离；
     * 注意：
     *     1. 阴影的外观受border-radius样式的影响；
     *     2. :after和:before等伪元素会继承阴影的效果。
     */
    .drop-shadow(@x:0, @y:0, @blur:0, @c: black){
		-webkit-filter: drop-shadow(@x @y @blur @c);
		-moz-filter: drop-shadow(@x @y @blur @c);
		-ms-filter: drop-shadow(@x @y @blur @c);
		-o-filter: drop-shadow(@x @y @blur @c);
		filter: drop-shadow(@x @y @blur @c);
		filter: DropShadow(Color=@c,OffX=@x,OffY=@y,Positive=1)~"\9";
    }
}
//生成动画
.anim(...){
	-webkit-animation: @arguments;
	animation: @arguments;
}
//CSS3转换
.tsf(...){
	-webkit-transform: @arguments;
	-ms-transform: @arguments;
	transform: @arguments;
}
.translate(@x,@y){
	-webkit-transform+_: translate(@x,@y);
	-ms-transform+_: translate(@x,@y);
	transform+_: translate(@x,@y);
}
.scale(@x){
	-webkit-transform+_: scale(@x,@x);
	-ms-transform+_: scale(@x,@x);
	transform+_: scale(@x,@x);
}
.scale(@x,@y){
	-webkit-transform+_: scale(@x,@y);
	-ms-transform+_: scale(@x,@y);
	transform+_: scale(@x,@y);
}
.skew(@x,@y){
	-webkit-transform+_: skew(~"@{x}deg",~"@{y}deg");
	-ms-transform+_: skew(~"@{x}deg",~"@{y}deg");
	transform+_: skew(~"@{x}deg",~"@{y}deg");
}
.rotate(@r){
	-webkit-transform+_: rotate(~"@{r}deg");
	-ms-transform+_: rotate(~"@{r}deg");
	transform+_: rotate(~"@{r}deg");
}
.translate3D(@x,@y,@z){
	-webkit-transform+_: translate3D(@x,@y,@z);
	-ms-transform+_: translate3D(@x,@y,@z);
	transform+_: translate3D(@x,@y,@z);
}
.scale3D(@x){
	-webkit-transform+_: scale3D(@x,@x,@x);
	-ms-transform+_: scale3D(@x,@x,@x);
	transform+_: scale3D(@x,@x,@x);
}
.scale3D(@x,@y,@z){
	-webkit-transform+_: scale3D(@x,@y,@z);
	-ms-transform+_: scale3D(@x,@y,@z);
	transform+_: scale3D(@x,@y,@z);
}
.scaleX(@s){
	-webkit-transform+_: scaleX(@s);
	-ms-transform+_: scaleX(@s);
	transform+_: scaleX(@s);
}
.scaleY(@s){
	-webkit-transform+_: scaleY(@s);
	-ms-transform+_: scaleY(@s);
	transform+_: scaleY(@s);
}
.scaleZ(@s){
	-webkit-transform+_: scaleZ(@s);
	-ms-transform+_: scaleZ(@s);
	transform+_: scaleZ(@s);
}
.rotate3D(@x,@y,@z,@r){
	-webkit-transform+_: rotate3D(@x,@y,@z,~"@{r}deg");
	-ms-transform+_: rotate3D(@x,@y,@z,~"@{r}deg");
	transform+_: rotate3D(@x,@y,@z,~"@{r}deg");
}
.rotateX(@r){
	-webkit-transform+_: rotateX(~"@{r}deg");
	-ms-transform+_: rotateX(~"@{r}deg");
	transform+_: rotateX(~"@{r}deg");
}
.rotateY(@r){
	-webkit-transform+_: rotateY(~"@{r}deg");
	-ms-transform+_: rotateY(~"@{r}deg");
	transform+_: rotateY(~"@{r}deg");
}
.rotateZ(@r){
	-webkit-transform+_: rotateZ(~"@{r}deg");
	-ms-transform+_: rotateZ(~"@{r}deg");
	transform+_: rotateZ(~"@{r}deg");
}
//CSS3动画，@name为动画名称，@mixin为预定义的一组动画值，比如使用xx%，或from to的
.keyframes(@name,@mixin){
	@-webkit-keyframes @name{
		@mixin();
	}
	@keyframes @name{
		@mixin();
	}
}
//转换中心，2D或3D，FF/IE/OPERA不支持3D
.tsf-o(@x,@y){
	-webkit-transform-origin:@x @y; /* Safari and Chrome */
	-ms-transform-origin:@x @y; /* IE 9 */
	transform-origin:@x @y;
}
.tsf-o(@x,@y,@z){
	-webkit-transform-origin:@x @y @z; /* Safari and Chrome */
	transform-origin:@x @y @z;
}
// 保持3D效果
.threeD(){
    transform-style: preserve-3D;
}
// 透视
.pers(@z){
	-webkit-perspective: @z;
	-moz-perspective: @z;
	perspective: @z;
}
.pers-o(@z){
	-webkit-perspective-origin: @z;
	-moz-perspective-origin: @z;
	perspective-origin: @z;
}
//3D背面显示性
.backface(true){
	backface-visibility: visible;
}
.backface(false){
	backface-visibility: hidden;
}
// 字母大小写
.upper() {
    text-transform: uppercase;
}
.lower() {
    text-transform: lowercase;
}
.capital() {
    text-transform: capitalize;
}
.small() {
    font-variant: small-caps;
}
// 字、单词间隔
.l-sp(@px) {
    letter-spacing: @px;
}
.w-sp(@px) {
    word-spacing: @px;
}
// 数字次数的循环
// @mixin:{};一定要按这个格式写，不能丢了尾分号
.for(@mixin, @end, @begin : 1, @delta : 1) {
    .for-inner-loop(@counter : @begin) when(@counter <= @end) {
        @mixin();
        .for-inner-loop(@counter + @delta);
    }
    .for-inner-loop();
}
// 一个数组的循环
// 由于LESS变量作用域的问题，导致无法把长度跟项目元素设置成局部变量
// 所以要自己在@mixin里边使用length跟extract获取长度跟项目元素
.each(@mixin, @array) {
    .each-inner-loop(@counter : 1) when(@counter <= length(@array)) {
        @mixin();
        .each-inner-loop(@counter + 1);
    }
    .each-inner-loop();
}
// 用于移动端的表单组件外形
.app(@s : none) {
    -webkit-appearance: @s;
    -moz-appearance : @s;
}
.order(@n) {
    -webkit-order: @n;
    -moz-order : @n;
    order : @n;
}
.flex() {
    display: -webkit-flex;
    display: flex;
}
.flex-row() {
    -webkit-flex-direction: row;
    -moz-flex-direction : row;
    -ms-flex-direction : row;
    flex-direction : row;
}
.flex-row-rev() {
    -webkit-flex-direction: row-reverse;
    -moz-flex-direction : row-reverse;
    -ms-flex-direction : row-reverse;
    flex-direction : row-reverse;
}
.flex-col() {
    -webkit-flex-direction: column;
    -moz-flex-direction : column;
    -ms-flex-direction : column;
    flex-direction : column;
}
.flex-col-rev() {
    -webkit-flex-direction: column-reverse;
    -moz-flex-direction : column-reverse;
    -ms-flex-direction : column-reverse;
    flex-direction : column-reverse;
}
.flex-wrap() {
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap : wrap;
    -ms-flex-wrap : wrap;
    flex-wrap : wrap;
}
.flex-nowrap() {
    -webkit-flex-wrap: nowrap;
    -moz-flex-wrap : nowrap;
    -ms-flex-wrap : nowrap;
    flex-wrap : nowrap;
}
.flex-wrap-rev() {
    -webkit-flex-wrap: wrap-reverse;
    -moz-flex-wrap : wrap-reverse;
    -ms-flex-wrap : wrap-reverse;
    flex-wrap : wrap-reverse;
}
.flex-just(@way : flex-start) {
    -webkit-justify-content: @way;
    -moz-justify-content : @way;
    -ms-justify-content : @way;
    justify-content : @way;
}
.flex-items(@way : flex-start) {
    -webkit-align-items: @way;
    -moz-align-items : @way;
    -ms-align-items : @way;
    align-items : @way;
}
.flex-aligns(@way : flex-start) {
    -webkit-align-content: @way;
    -moz-align-content : @way;
    -ms-align-content : @way;
    align-content : @way;
}
.flex(@args) {
    -webkit-flex: @args;
    -moz-flex : @args;
    -ms-flex : @args;
    flex : @args;
}
.flex-none() {
    // 0 0 none
    -webkit-flex: none;
    -moz-flex : none;
    -ms-flex : none;
    flex : none;
}
.flex-auto() {
    // 1 1 auto
    -webkit-flex: auto;
    -moz-flex : auto;
    -ms-flex : auto;
    flex : auto;
}
.flex-self(@way : auto) {
    -webkit-align-self: @way;
    -moz-align-self : @way;
    -ms-align-self : @way;
    align-self : @way;
}
